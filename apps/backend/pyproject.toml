[tool.poetry]
name = "docker-image-manager"
version = "0.0.1"
description = "docker-image-manager"
authors = ["Naufal Afif <naufalafif58@gmail.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.9"
uvicorn = "^0.17.4"
fastapi = "0.95.0"
pydantic = { version = "^1.8", extras = ["email", "dotenv"] }
python-slugify = "^5.0"
Unidecode = "^1.3"
loguru = "^0.6.0"
websockets = "^10.2"
aiodocker = "^0.21.0"
supabase = "^0.7.1"
aiohttp = "^3.8.3"
gunicorn = "^20.1.0"
python-dotenv = "^1.0.0"
redis = "^4.5.4"
tenacity = "^8.2.2"
asyncer = "0.0.2"
python-dateutil = "^2.8.2"

[tool.poetry.dev-dependencies]
black = "^22.1.0"
isort = "^5.10"
autoflake = "^1.4"
wemake-python-styleguide = "^0.16.0"
mypy = "^0.931"
flake8-fixme = "^1.1"
pytest = "^7.0"
pytest-cov = "^3.0"
pytest-asyncio = "^0.18.0"
pytest-env = "^0.6.2"
pytest-xdist = "^2.4.0"
asgi-lifespan = "^1.0.1"

[tool.isort]
profile = "black"
src_paths = ["app", "tests"]
combine_as_imports = true

[tool.ruff]
ignore = ["E501", "E402"]

[tool.pytest.ini_options]
testpaths = "tests"
filterwarnings = "error"
addopts = '''
  --strict-markers
  --tb=short
  --cov=app
  --cov=tests
  --cov-branch
  --cov-report=term-missing
  --cov-report=html
  --cov-report=xml
  --no-cov-on-fail
  --cov-fail-under=100
  --numprocesses=auto
  --asyncio-mode=auto
'''
env = [
  "SECRET_KEY=secret",
  "MAX_CONNECTIONS_COUNT=1",
  "MIN_CONNECTIONS_COUNT=1",
]

[build-system]
requires = ["poetry>=1.0"]
build-backend = "poetry.masonry.api"
